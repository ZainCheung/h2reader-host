{"version":3,"sources":["component/LangLink.js","screen/Login.js","component/AvatarSquare.js","component/TalkItem.js","component/TalkList.js","screen/Reader.js","component/BookItem.js","component/QRImage.js","component/UploadButton.js","screen/List.js","App.js","serviceWorker.js","store/AppState.js","i18n.js","index.js"],"names":["LangLink","_dec","translate","_dec2","inject","withRouter","_class","observer","Component","setLang","lang","this","props","i18n","changeLanguage","render","React","createElement","className","onClick","t","main","DocumentTitle","title","store","appname","AvatarSquare","url","data","base64","class_name","e","src","alt","name","LinkRenderer","href","target","children","ImageZoomed","ImageZoom","image","TalkItem","talk","role","roles","filter","item","id","role_id","role_class","role_ismain","type","data-id","ReactMarkdown","source","text","renderers","link","TalkList","constructor","super","showToId","to_index","alltalks","forEach","index","console","log","setState","slice","setTimeout","toBottom","showOne","state","talks","length","talks1","thetalk","shift","show_talks1","show_talks","push","end_ref","current","scrollIntoView","createRef","componentDidMount","loadData","componentDidUpdate","prevProps","current_talk_id","goBack","window","confirm","history","Fragment","map","key","Link","to","Icon","iconSize","icon","meta","author","detail","ref","style","end","Reader","arguments","bookid","bookpath","concat","param","match","params","isNaN","decodeURIComponent","parseInt","file","callback","rawFile","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","responseText","send","readTextFile","jsondata","JSON","parse","_objectSpread","alert","err","replace","BookItem","encodeURIComponent","bookurl","Button","minimal","QRImage","value","ck","setInterval","check","canvas","document","getElementById","toDataURL","clearInterval","img_url","QRCode","size","includeMargin","UploadButton","drop_ref","files","upload_url","formData","FormData","append","axios","post","code","message","onClose","read_url","site_url","Dropzone","accept","maxSize","multiple","onDrop","acceptedFiles","onDropped","_ref","getRootProps","getInputProps","large","Overlay","isOpen","AnchorButton","intent","ControlGroup","fill","vertical","InputGroup","readOnly","CopyToClipboard","onCopy","List","doJump","books","count","placeholder","onChange","evt","App","Router","Switch","Route","path","component","Boolean","location","hostname","_initializerDefineProperty","_descriptor","_applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","use","Backend","LanguageDetector","reactI18nextModule","init","fallbackLng","ns","defaultNS","debug","saveMissing","missingKeyHandler","lng","URLSearchParams","stringify","dev_api","interpolation","escapeValue","react","wait","ReactDOM","Provider","AppState","I18nextProvider","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24c8068a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { translate } from 'react-i18next';\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class LangLink extends Component\n{\n    setLang( lang )\n    {\n        this.props.i18n.changeLanguage( lang );\n    }\n    render()\n    {\n        return <div>\n            <span className=\"pointer\" onClick={()=>this.setLang('zh-cn')}>中文</span> · <span className=\"pointer\" onClick={()=>this.setLang('en')}>English</span>\n        </div>;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter,Link } from 'react-router-dom';\nimport { translate } from 'react-i18next';\nimport LangLink from '../component/LangLink'; \nimport DocumentTitle from 'react-document-title';\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class Login extends Component\n{\n    render()\n    {\n        const { t } = this.props;\n        const main = <div className=\"box\">\n            <div className=\"title\">{t(\"Welcome\")}</div>\n            <div className=\"lang\"> <LangLink /></div>\n        </div>;\n        return <DocumentTitle title={this.props.store.appname}>{main}</DocumentTitle>;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { translate } from 'react-i18next';\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class AvatarSquare extends Component\n{\n    // constructor(props) \n    // {\n    //     super(props);\n    // }\n    \n    // componentDidMount()\n    // {\n    //    // \n    // }\n\n    render()\n    {\n        // const store = this.props.store;\n        const props = this.props;\n\n        const url = props.data.base64 || \"/image/h2editor.logo.png\"; \n        const class_name = props.className ? \"avatar-square \" + props.className :  \"avatar-square \";\n        \n        return <div className={class_name} onClick={(e)=>{if(props.onClick)props.onClick(e);}}><img src={url} alt={props.data.name} /></div>;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { translate } from 'react-i18next';\nimport AvatarSquare from '../component/AvatarSquare';\nimport ImageZoom from 'react-medium-image-zoom';\nimport ReactMarkdown from 'react-markdown';\n\nfunction LinkRenderer(props) \n{\n    return <a href={props.href} target=\"_blank\">{props.children}</a>\n}\n\nfunction ImageZoomed( props )\n{\n    return <ImageZoom  \n    image={{ src: props.src , className:\"imginbox\" }} \n    />\n}\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class TalkItem extends Component\n{\n    // constructor(props) \n    // {\n    //     super(props);\n    // }\n    \n    // componentDidMount()\n    // {\n    //    // \n    // }\n\n    render()\n    {\n        const store = this.props.store;\n        const props = this.props;\n\n        if( !props.data ) return null;\n\n        const talk = props.data;\n        const role = props.roles.filter( item => item.id == talk.role_id )[0];\n        const role_class = talk.role_ismain ? \" role main \" : \" role notmain\";\n\n        // console.log( \"role\" , props.roles );\n        \n        return talk.type == 'role' \n            ?\n                \n                <div className={\"talk-list-item-ro\"+role_class} data-id={talk.id}>\n                <div className=\"avatarside\">\n                    <AvatarSquare data={role} className=\"s48\"/>\n                </div>\n                <div className=\"contentside\">\n                    <div className=\"name\">{role.name}</div>\n                    <div className=\"text\"><ReactMarkdown source={talk.text} renderers={{link: LinkRenderer,image:ImageZoomed}}/></div>\n                </div>\n                \n                </div>\n            :\n            <div className=\"talk-list-item-ro aside\" ><div className=\"aside-text\"><ReactMarkdown source={talk.text} renderers={{link: LinkRenderer,image:ImageZoomed}}/></div></div>;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { translate } from 'react-i18next';\nimport TalkItem from '../component/TalkItem'; \nimport { Icon, AnchorButton  } from \"@blueprintjs/core\";\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class TalkList extends Component\n{\n    constructor(props) \n    {\n        super(props);\n        this.state = {\n            \"talks\":[],\n            \"show_talks\":[],\n            \"end\":false\n        };\n        this.end_ref = React.createRef();\n    }\n\n    componentDidMount()\n    {\n       this.loadData();\n    }\n\n    loadData()\n    {\n        this.alltalks = this.props.talks;\n        this.setState( { \"talks\": this.props.talks , \"end\" : this.props.talks.length < 1 } );\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        if (this.props.current_talk_id !== prevProps.current_talk_id) \n        {\n            this.loadData();\n            this.showToId( this.props.current_talk_id );\n            this.toBottom();\n            // console.log( \"now id\" , this.props.current_talk_id );\n        }\n    }\n\n    showToId = ( id ) =>\n    {\n        let to_index = -1;\n        this.alltalks.forEach( ( item , index ) => \n        {\n            if( item.id == id ) to_index = index;\n            // else console.log( \"item.id != id\", item.id , id );\n\n        } );\n\n        console.log( \"to_index\",to_index );\n        if( to_index >= 0 )\n        {\n            this.setState({\n                \"show_talks\":this.alltalks.slice(0,to_index+1),\n                \"talks\":this.alltalks.slice(to_index+1)\n            })\n\n            setTimeout(() => {\n                this.toBottom();\n            }, 100);\n        }\n    }\n\n\n\n    showOne = ()=>\n    {\n        const state = this.state;\n        if( state.talks.length < 1 )\n        {\n            this.setState( { \"end\": true} );\n            return false;\n        } \n\n        let talks1 = state.talks;\n        let thetalk = talks1.shift();\n        let show_talks1 = state.show_talks;\n        show_talks1.push(thetalk);\n\n        this.setState( { \"talks\":talks1 , \"show_talks\":show_talks1 } );\n\n        setTimeout(() => {\n            this.toBottom();\n        }, 100);\n        \n\n        return thetalk;\n \n    }\n\n    toBottom = () =>\n    {\n        if( this.end_ref && this.end_ref.current )\n            this.end_ref.current.scrollIntoView( true );\n    }\n\n    goBack()\n    {\n        if( !window.confirm( \"当前章节已经完成，是否返回首页？\" ) ) return false;\n        this.props.history.push(\"/\");\n    }\n\n    \n\n    render()\n    {\n        const state = this.state;\n        const props = this.props;\n        \n        \n        return  state.talks  ?\n        <div className=\"talklist-ro\" >\n            <div className=\"thelist\">\n            { state.show_talks.length > 0 \n            ? \n            <>\n            {state.show_talks.map( item => <TalkItem roles={props.roles} key={item.id} data={item} /> ) }\n            </>\n            : \n            \n            <div className=\"guide\">\n                <div className=\"logo\"> <img src=\"/image/h2.logo.png\" /> </div>\n                <div className=\"back\">\n                    <Link to=\"/\"><Icon iconSize={40} icon=\"circle-arrow-left\" /></Link>\n                </div>\n                { this.props.meta && <><div className=\"name\">{this.props.meta.name}</div>\n                <div className=\"author\"><Icon icon=\"user\" /> {this.props.meta.author}</div>\n                <div className=\"link\"><Icon icon=\"link\" /> {this.props.meta.link}</div>\n                <div className=\"detail\">{this.props.meta.detail}</div></>  }\n                <div className=\"continue\">点击下方的 ✦ 开始</div>\n                \n\n            </div> \n            }\n\n            <div ref={this.end_ref} style={{\"marginTop\":\"100px\"}}></div>\n            \n\n            </div>\n            <div className=\"touchpad\" onClick={()=>this.showOne()}>\n                {state.end ? <span className=\"blink noselect\" onClick={()=>this.goBack()}> done </span> : <span className=\"blink noselect\" > ✦ </span>}\n            </div>\n            \n        </div> : null ;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { translate } from 'react-i18next';\nimport JSZipUtils from 'jszip-utils';\nimport JSZip from 'jszip';\nimport DocumentTitle from 'react-document-title';\nimport TalkList from '../component/TalkList';\n\nfunction readTextFile(file, callback) \n{\n    var rawFile = new XMLHttpRequest();\n    rawFile.overrideMimeType(\"application/json\");\n    rawFile.open(\"GET\", file, true);\n    rawFile.onreadystatechange = function() {\n        if (rawFile.readyState === 4 && rawFile.status == \"200\") {\n            callback(rawFile.responseText);\n        }\n    }\n    rawFile.send(null);\n}\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class Reader extends Component\n{\n    // constructor(props) \n    // {\n    //     super(props);\n    // }\n    state = { \"meta\":{} , \"talks\":[] , \"roles\":[] , \"show_talks\":[] }\n    \n    componentDidMount()\n    {\n        let bookid = 1;\n        let bookpath = `/books/${bookid}.h2book`;\n\n        const param = this.props.match.params.id;\n        if( isNaN( param ) )\n        {\n            // 字符串\n            bookpath = decodeURIComponent( param );\n        }\n        else\n        {\n           // 数字\n           if( parseInt(param) > 0 ) bookid = parseInt(param);\n           else bookid = 1;\n\n           bookpath = `/books/${bookid}.h2book`;\n        }\n        \n        \n        \n        \n\n        try\n        {\n            // JSZipUtils.getBinaryContent( bookpath , async ( err, data ) => \n            // {\n            //     if(err) \n            //     {\n            //         window.alert(\"文件载入失败，请返回确认地址是否正确。\");\n            //         console.log( err );\n            //         this.props.history.replace(\"/\");\n            //         // throw err; // or handle err\n            //     }\n            //     else\n            //     {\n            //         //console.log(\"FILE OK\");\n\n            //         const zip = await JSZip.loadAsync( data );\n            //         const data2 = await zip.file(\"h2content.json\").async(\"string\");\n            //         const jsondata = JSON.parse( data2 );\n\n            //         if( jsondata )\n            //         {\n            //             this.setState( {...jsondata} );\n            //         }                \n            //     }\n            // });\n            readTextFile( bookpath , ( data ) =>\n            {\n                const jsondata = JSON.parse( data );\n\n                if( jsondata )\n                {\n                    this.setState( {...jsondata} );\n                }   \n            });\n\n        }catch( e )\n        {\n            alert(\"文件载入失败，请返回确认地址是否正确。\");\n            console.log( err );\n            this.props.history.replace(\"/\");\n        }\n        \n\n        \n        \n        \n \n    }\n\n    render()\n    {\n        const state = this.state;\n\n        const main = <div className=\"read-page\">{state.talks && state.talks.length > 0 && <TalkList talks={state.talks} roles={state.roles} meta={state.meta}  />}\n        </div>;\n\n        const title = state.meta.name ? state.meta.name + '@' + this.props.store.appname : this.props.store.appname;\n\n        return <DocumentTitle title={title}>{main}</DocumentTitle>;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { translate } from 'react-i18next';\nimport { Button  } from \"@blueprintjs/core\";\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class BookItem extends Component\n{\n    // constructor(props) \n    // {\n    //     super(props);\n    // }\n    \n    // componentDidMount()\n    // {\n    //    // \n    // }\n\n    // componentDidUpdate(prevProps)\n    // {\n    //     if (this.props.data !== prevProps.data) \n    //     {\n           \n    //     }\n    // }\n    \n    render()\n    {\n        const item = this.props.data;\n        if( !item ) return null;\n\n        return <li onClick={()=>this.props.history.push('/read/'+encodeURIComponent(item.bookurl) )}>\n            <span>{item.name}</span>\n            <Button icon=\"chevron-right\" minimal={true} />\n        </li>;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport QRCode from 'qrcode.react';\n\n@withRouter\n@inject(\"store\")\n@observer\nexport default class QRImage extends Component\n{\n    state = {\"value\":this.props.value,\"img_url\":\"\"};\n    \n    componentDidMount()\n    {\n        this.ck=setInterval( ()=>this.check() , 1000 );\n    }\n\n    check()\n    {\n        const canvas = document.getElementById('theqr__inbox');\n        if( canvas )\n        {\n            this.setState({\"img_url\":canvas.toDataURL(\"image/png\")});\n            clearInterval( this.ck );\n        }\n    }\n    \n    \n    render()\n    {\n        // <QRCode value={this.state.qr_code}  /> \n        return <div className={this.props.className}>\n            { this.state.img_url.length > 0 ? <img src={this.state.img_url} /> : <QRCode size={300} value={this.state.value} id=\"theqr__inbox\" includeMargin={true}  /> }\n        </div>\n         ;\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { translate } from 'react-i18next';\n\nimport { Button, Overlay, ControlGroup, InputGroup, AnchorButton  } from \"@blueprintjs/core\";\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport QRImage from '../component/QRImage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class UploadButton extends Component\n{\n    constructor(props) \n    {\n        super(props);\n        this.drop_ref = React.createRef();\n        this.state = { \"url\" : false };\n    }\n    \n    // componentDidMount()\n    // {\n    //    // \n    // }\n    async onDropped( files )\n    {\n        if( !this.props.upload_url )\n        {\n            alert(\"错误的上传地址\");\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append(\"book\", files[0]);\n\n        // const store = this.props.store;\n        // store.openFile( files[0] );\n        const { data } = await axios.post( this.props.upload_url , formData);\n\n        if( data.code > 0 )\n        {\n            alert( data.message );\n        }\n        else\n        {\n            if( data.data && data.data.url )\n            {\n                // show qrcode\n                this.setState( {\"url\":data.data.url} );\n            }\n        }  \n    }\n\n    onClose()\n    {\n        if( !window.confirm(\"关闭后将无法找到这个地址，请确定保存后再关闭。是否继续？\") ) return false;\n\n        this.setState({\"url\":false});\n    }\n\n    \n\n    render()\n    {\n        const read_url = this.props.site_url + '/read/'+ encodeURIComponent(encodeURIComponent(this.state.url));\n\n        return <><Dropzone \n        accept=\".h2book\"  \n        maxSize={1024*1024*10}\n        multiple={false} \n        ref={this.drop_ref} \n        onDrop={acceptedFiles => this.onDropped(acceptedFiles)}>\n        {({getRootProps, getInputProps}) => (\n          <div {...getRootProps()}>\n              {/*  */}\n              <input {...getInputProps()} />\n              <Button icon=\"upload\" large={true} />\n          </div>\n          \n\n        )}\n            </Dropzone>\n            <Overlay isOpen={this.state.url } >\n            <div className=\"overbox\">\n                <div className=\"centerbox\">\n                    <QRImage value={read_url} />\n                    <div>\n\n                    <div className=\"explain\">微信扫码即可阅读，可保存图片分享到朋友圈</div>\n\n                    <div className=\"therow\">\n                    <Button text=\"关闭\" icon=\"cross\" onClick={()=>this. onClose()} large={true} />\n\n                    <AnchorButton href={read_url} icon=\"manual\"  text=\"开始阅读\" large={true} intent=\"PRIMARY\" />\n                   \n                    </div>\n\n                    <div className=\"std-hr\"></div>\n\n                    <ControlGroup fill={true} vertical={false}>\n                    <InputGroup value={read_url} readOnly={true} large={true} />\n\n                    \n                    \n                    <CopyToClipboard text={read_url} onCopy={()=>alert(\"已复制到剪贴板\")}>\n                        <Button text=\"复制阅读地址\" large={true} />\n                    </CopyToClipboard>\n\n                    </ControlGroup>\n\n                    \n\n                    \n                    \n                    </div>\n                    \n                </div>\n            </div>\n            \n            </Overlay>\n        </>\n    }\n}","import React, { Component } from 'react';\nimport { observer , inject } from 'mobx-react';\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { translate } from 'react-i18next';\nimport { ControlGroup, InputGroup, Button, FileInput  } from \"@blueprintjs/core\";\nimport BookItem from '../component/BookItem'; \nimport UploadButton from '../component/UploadButton'; \n\n\n\nimport DocumentTitle from 'react-document-title';\n\nfunction readTextFile(file, callback) \n{\n    var rawFile = new XMLHttpRequest();\n    rawFile.overrideMimeType(\"application/json\");\n    rawFile.open(\"GET\", file, true);\n    rawFile.onreadystatechange = function() {\n        if (rawFile.readyState === 4 && rawFile.status == \"200\") {\n            callback(rawFile.responseText);\n        }\n    }\n    rawFile.send(null);\n}\n\n@withRouter\n@translate()\n@inject(\"store\")\n@observer\nexport default class List extends Component\n{\n    state = { \n        \"books\":[],\n        \"bookurl\":\"\"\n    }\n\n    doJump()\n    {\n        this.props.history.push('/read/'+encodeURIComponent(encodeURIComponent( this.state.bookurl )));\n        //console.log( this.props );\n    }\n    \n    componentDidMount()\n    {\n        readTextFile( 'books/index.json' , ( data )=>\n        {\n            if( data )\n                this.setState( { ...JSON.parse( data ) } )\n        } );\n        \n    }\n\n    render()\n    {\n        const books = this.state.books;\n        let count = 1;\n        \n        const main = <div className=\"list-page\">\n        <div className=\"jumpbox\">\n            <div className=\"row\">\n                <div className=\"left\">\n                    <ControlGroup fill={true} vertical={false}>\n\n                    <InputGroup placeholder=\"输入.h2book文件的url...\" value={this.state.bookurl} onChange={ ( evt )=>{ this.setState( { \"bookurl\" : evt.target.value } ) }} large={true} />\n\n                    <Button icon=\"arrow-right\" onClick={()=>{this.doJump()}} large={true} />\n\n                    </ControlGroup>\n                </div>\n                { this.state.upload_url &&  <div className=\"right\">\n                    <UploadButton upload_url={this.state.upload_url} site_url={this.state.site_url} />\n                    \n                </div> }\n            </div>\n        \n\n        \n        </div>\n\n        <div className=\"logoline\">\n            <img src=\"/image/h2.logo.png\" alt=\"logo\"/>\n            {/* <div className=\"subtitle\">列表</div> */}\n        </div>\n        <ul className=\"booklist\">\n        { books.length > 0 && books.map((item)=>{\n            // console.log( item );\n            return <BookItem key={count++} data={item} /> \n        }) }\n        </ul>\n        \n    </div>;\n        return <DocumentTitle title={this.props.store.appname}>{main}</DocumentTitle>;\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from './screen/Login';\nimport Reader from './screen/Reader'; \nimport List from './screen/List'; \n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/read/:id\" component={Reader} />\n          <Route path=\"/\" component={List} />\n          \n        </Switch>\n      </Router>  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from \"mobx\";\nimport axios from 'axios';\n\nclass AppState\n{\n    @observable appname = \"方糖小剧场\";    \n}\n\nexport default new AppState();","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { reactI18nextModule } from 'react-i18next';\nimport axios from 'axios';\n\n\nconst dev_api = 'http://localhost:8088/';\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(reactI18nextModule)\n  .init({\n    fallbackLng: 'zh-cn',\n\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n\n    debug: false,\n    saveMissing:false,\n    missingKeyHandler: function(lng, ns, key) {\n        var params = new URLSearchParams();\n        params.append(\"lng\" , JSON.stringify( lng ));\n        params.append(\"ns\" ,  ns );\n        params.append(\"key\" , key );\n        const { data } = axios.post( dev_api + 'misswords' , params );\n    },\n    interpolation: {\n      escapeValue: false, // not needed for react!!\n    },\n\n    react: {\n      wait: true\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"mobx-react\";\nimport AppState from './store/AppState';\n\nimport './index.scss';\n\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n'; \n\nReactDOM.render(<Provider store={AppState}>\n                    <I18nextProvider i18n={ i18n }>\n                        <App />\n                    </I18nextProvider>    \n                </Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n\n"],"sourceRoot":""}